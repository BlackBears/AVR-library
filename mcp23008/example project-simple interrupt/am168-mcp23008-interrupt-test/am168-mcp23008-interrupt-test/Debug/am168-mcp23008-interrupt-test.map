Archive member included because of file (symbol)

c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_divmodsi4.o)
                              i2c.o (__divmodsi4)
c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                              c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o (exit)
c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                              am168-mcp23008-interrupt-test.o (__do_clear_bss)
c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_udivmodsi4.o)
                              c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

data                0xc               am168-mcp23008-interrupt-test.o
mcp23008_data       0x2               mcp23008.o
gpio                0x2               am168-mcp23008-interrupt-test.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
LOAD am168-mcp23008-interrupt-test.o
LOAD i2c.o
LOAD mcp23008.o
LOAD c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a
LOAD c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libc.a
LOAD c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7d6
 *(.vectors)
 .vectors       0x00000000       0x68 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x10 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000084        0x8 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
 *(.init9)
 *(.text)
 .text          0x0000008c        0x4 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
                0x0000008c                __vector_22
                0x0000008c                __vector_1
                0x0000008c                __vector_24
                0x0000008c                __vector_12
                0x0000008c                __bad_interrupt
                0x0000008c                __vector_6
                0x0000008c                __vector_3
                0x0000008c                __vector_23
                0x0000008c                __vector_25
                0x0000008c                __vector_11
                0x0000008c                __vector_13
                0x0000008c                __vector_17
                0x0000008c                __vector_19
                0x0000008c                __vector_7
                0x0000008c                __vector_5
                0x0000008c                __vector_4
                0x0000008c                __vector_9
                0x0000008c                __vector_21
                0x0000008c                __vector_15
                0x0000008c                __vector_8
                0x0000008c                __vector_14
                0x0000008c                __vector_10
                0x0000008c                __vector_16
                0x0000008c                __vector_18
                0x0000008c                __vector_20
 .text          0x00000090      0x134 am168-mcp23008-interrupt-test.o
                0x00000090                _flash
                0x000000ac                __vector_2
                0x000000fe                main
 .text          0x000001c4      0x512 i2c.o
                0x000001c4                i2cSetBitrate
                0x000001fe                i2cInit
                0x0000023c                i2cSetLocalDeviceAddr
                0x0000024e                i2cSetSlaveReceiveHandler
                0x00000258                i2cSetSlaveTransmitHandler
                0x00000262                i2cSendStart
                0x00000270                i2cSendStop
                0x0000027e                i2cWaitForComplete
                0x00000288                i2cSendByte
                0x0000029a                i2cReceiveByte
                0x000002b6                i2cGetReceivedByte
                0x000002bc                i2cGetStatus
                0x000002c2                i2cMasterSend
                0x00000302                i2cMasterReceive
                0x00000364                i2cMasterSendNI
                0x000003e4                i2cMasterReceiveNI
                0x00000474                SIG_2WIRE_SERIAL
                0x000006d0                i2cGetState
 .text          0x000006d6       0x82 mcp23008.o
                0x000006d6                mcp23008_init
                0x00000700                mcp23008_write_register
                0x00000718                mcp23008_write
                0x00000724                mcp23008_read_register
 .text          0x00000758        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_divmodsi4.o)
 .text          0x00000758        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text          0x00000758        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000758        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_udivmodsi4.o)
                0x00000758                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000758       0x36 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_divmodsi4.o)
                0x00000758                __divmodsi4
 .text.libgcc   0x0000078e        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000078e        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000078e       0x44 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_udivmodsi4.o)
                0x0000078e                __udivmodsi4
                0x000007d2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007d2        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                0x000007d2                _exit
                0x000007d2                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007d2        0x4 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000007d6                _etext = .

.data           0x00800100        0x0 load address 0x000007d6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
 .data          0x00800100        0x0 am168-mcp23008-interrupt-test.o
 .data          0x00800100        0x0 i2c.o
 .data          0x00800100        0x0 mcp23008.o
 .data          0x00800100        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_divmodsi4.o)
 .data          0x00800100        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x5a
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o
 .bss           0x00800100        0x0 am168-mcp23008-interrupt-test.o
 .bss           0x00800100       0x4a i2c.o
 .bss           0x0080014a        0x0 mcp23008.o
 .bss           0x0080014a        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_divmodsi4.o)
 .bss           0x0080014a        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .bss           0x0080014a        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 .bss           0x0080014a        0x0 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080014a        0xe am168-mcp23008-interrupt-test.o
                0x0080014a                data
                0x00800156                gpio
 COMMON         0x00800158        0x2 mcp23008.o
                0x00800158                mcp23008_data
                0x0080015a                PROVIDE (__bss_end, .)
                0x000007d6                __data_load_start = LOADADDR (.data)
                0x000007d6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080015a        0x0
                0x0080015a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080015a                PROVIDE (__noinit_end, .)
                0x0080015a                _end = .
                0x0080015a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm168p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 am168-mcp23008-interrupt-test.o
 .debug_aranges
                0x00000020       0x20 i2c.o
 .debug_aranges
                0x00000040       0x20 mcp23008.o

.debug_pubnames
                0x00000000      0x248
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x47 am168-mcp23008-interrupt-test.o
 .debug_pubnames
                0x00000047      0x181 i2c.o
 .debug_pubnames
                0x000001c8       0x80 mcp23008.o

.debug_info     0x00000000      0xa16
 *(.debug_info)
 .debug_info    0x00000000      0x31d am168-mcp23008-interrupt-test.o
 .debug_info    0x0000031d      0x532 i2c.o
 .debug_info    0x0000084f      0x1c7 mcp23008.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x452
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1b0 am168-mcp23008-interrupt-test.o
 .debug_abbrev  0x000001b0      0x1b7 i2c.o
 .debug_abbrev  0x00000367       0xeb mcp23008.o

.debug_line     0x00000000      0xa02
 *(.debug_line)
 .debug_line    0x00000000      0x2dd am168-mcp23008-interrupt-test.o
 .debug_line    0x000002dd      0x5f1 i2c.o
 .debug_line    0x000008ce      0x134 mcp23008.o

.debug_frame    0x00000000      0x1c0
 *(.debug_frame)
 .debug_frame   0x00000000       0x40 am168-mcp23008-interrupt-test.o
 .debug_frame   0x00000040      0x130 i2c.o
 .debug_frame   0x00000170       0x50 mcp23008.o

.debug_str      0x00000000      0x4ba
 *(.debug_str)
 .debug_str     0x00000000      0x1ab am168-mcp23008-interrupt-test.o
                                0x1e9 (size before relaxing)
 .debug_str     0x000001ab      0x29e i2c.o
                                0x3ca (size before relaxing)
 .debug_str     0x00000449       0x71 mcp23008.o
                                0x1a6 (size before relaxing)

.debug_loc      0x00000000      0x454
 *(.debug_loc)
 .debug_loc     0x00000000       0x14 am168-mcp23008-interrupt-test.o
 .debug_loc     0x00000014      0x327 i2c.o
 .debug_loc     0x0000033b      0x119 mcp23008.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(am168-mcp23008-interrupt-test.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0xb4
 .debug_pubtypes
                0x00000000       0x4d am168-mcp23008-interrupt-test.o
 .debug_pubtypes
                0x0000004d       0x40 i2c.o
 .debug_pubtypes
                0x0000008d       0x27 mcp23008.o
